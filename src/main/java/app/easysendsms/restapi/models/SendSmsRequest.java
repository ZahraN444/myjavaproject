/*
 * EasySendSMSAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package app.easysendsms.restapi.models;

import app.easysendsms.restapi.DateTimeHelper;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.time.LocalDateTime;

/**
 * This is a model class for SendSmsRequest type.
 */
public class SendSmsRequest {
    private String from;
    private String to;
    private String text;
    private String type;
    private OptionalNullable<LocalDateTime> scheduled;

    /**
     * Default constructor.
     */
    public SendSmsRequest() {
    }

    /**
     * Initialization constructor.
     * @param  from  String value for from.
     * @param  to  String value for to.
     * @param  text  String value for text.
     * @param  type  String value for type.
     * @param  scheduled  LocalDateTime value for scheduled.
     */
    public SendSmsRequest(
            String from,
            String to,
            String text,
            String type,
            LocalDateTime scheduled) {
        this.from = from;
        this.to = to;
        this.text = text;
        this.type = type;
        this.scheduled = OptionalNullable.of(scheduled);
    }

    /**
     * Initialization constructor.
     * @param  from  String value for from.
     * @param  to  String value for to.
     * @param  text  String value for text.
     * @param  type  String value for type.
     * @param  scheduled  LocalDateTime value for scheduled.
     */

    protected SendSmsRequest(String from, String to, String text, String type,
            OptionalNullable<LocalDateTime> scheduled) {
        this.from = from;
        this.to = to;
        this.text = text;
        this.type = type;
        this.scheduled = scheduled;
    }

    /**
     * Getter for From.
     * Sender Name that the message will appear from. Max Length of 15 if numeric, 11 if
     * alphanumeric.
     * @return Returns the String
     */
    @JsonGetter("from")
    public String getFrom() {
        return from;
    }

    /**
     * Setter for From.
     * Sender Name that the message will appear from. Max Length of 15 if numeric, 11 if
     * alphanumeric.
     * @param from Value for String
     */
    @JsonSetter("from")
    public void setFrom(String from) {
        this.from = from;
    }

    /**
     * Getter for To.
     * Mobile number of the recipient. Use a comma to send to multiple numbers, max 30 per request.
     * @return Returns the String
     */
    @JsonGetter("to")
    public String getTo() {
        return to;
    }

    /**
     * Setter for To.
     * Mobile number of the recipient. Use a comma to send to multiple numbers, max 30 per request.
     * @param to Value for String
     */
    @JsonSetter("to")
    public void setTo(String to) {
        this.to = to;
    }

    /**
     * Getter for Text.
     * The message to be sent, either in plain text or Unicode. Max length 5 parts.
     * @return Returns the String
     */
    @JsonGetter("text")
    public String getText() {
        return text;
    }

    /**
     * Setter for Text.
     * The message to be sent, either in plain text or Unicode. Max length 5 parts.
     * @param text Value for String
     */
    @JsonSetter("text")
    public void setText(String text) {
        this.text = text;
    }

    /**
     * Getter for Type.
     * Indicates the type of message. `0` for Plain text, `1` for Unicode.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * Indicates the type of message. `0` for Plain text, `1` for Unicode.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Internal Getter for Scheduled.
     * The scheduled date and time for sending the message, formatted in ISO 8601.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("scheduled")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetScheduled() {
        return this.scheduled;
    }

    /**
     * Getter for Scheduled.
     * The scheduled date and time for sending the message, formatted in ISO 8601.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getScheduled() {
        return OptionalNullable.getFrom(scheduled);
    }

    /**
     * Setter for Scheduled.
     * The scheduled date and time for sending the message, formatted in ISO 8601.
     * @param scheduled Value for LocalDateTime
     */
    @JsonSetter("scheduled")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setScheduled(LocalDateTime scheduled) {
        this.scheduled = OptionalNullable.of(scheduled);
    }

    /**
     * UnSetter for Scheduled.
     * The scheduled date and time for sending the message, formatted in ISO 8601.
     */
    public void unsetScheduled() {
        scheduled = null;
    }

    /**
     * Converts this SendSmsRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SendSmsRequest [" + "from=" + from + ", to=" + to + ", text=" + text + ", type="
                + type + ", scheduled=" + scheduled + "]";
    }

    /**
     * Builds a new {@link SendSmsRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SendSmsRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(from, to, text, type);
        builder.scheduled = internalGetScheduled();
        return builder;
    }

    /**
     * Class to build instances of {@link SendSmsRequest}.
     */
    public static class Builder {
        private String from;
        private String to;
        private String text;
        private String type;
        private OptionalNullable<LocalDateTime> scheduled;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  from  String value for from.
         * @param  to  String value for to.
         * @param  text  String value for text.
         * @param  type  String value for type.
         */
        public Builder(String from, String to, String text, String type) {
            this.from = from;
            this.to = to;
            this.text = text;
            this.type = type;
        }

        /**
         * Setter for from.
         * @param  from  String value for from.
         * @return Builder
         */
        public Builder from(String from) {
            this.from = from;
            return this;
        }

        /**
         * Setter for to.
         * @param  to  String value for to.
         * @return Builder
         */
        public Builder to(String to) {
            this.to = to;
            return this;
        }

        /**
         * Setter for text.
         * @param  text  String value for text.
         * @return Builder
         */
        public Builder text(String text) {
            this.text = text;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for scheduled.
         * @param  scheduled  LocalDateTime value for scheduled.
         * @return Builder
         */
        public Builder scheduled(LocalDateTime scheduled) {
            this.scheduled = OptionalNullable.of(scheduled);
            return this;
        }

        /**
         * UnSetter for scheduled.
         * @return Builder
         */
        public Builder unsetScheduled() {
            scheduled = null;
            return this;
        }

        /**
         * Builds a new {@link SendSmsRequest} object using the set fields.
         * @return {@link SendSmsRequest}
         */
        public SendSmsRequest build() {
            return new SendSmsRequest(from, to, text, type, scheduled);
        }
    }
}
