/*
 * EasySendSMSAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package app.easysendsms.restapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Responses type.
 */
public class Responses {
    private String number;
    private String country;
    private String errDesc;
    private String operatorName;
    private String type;
    private String mccmnc;
    private String roaming;
    private String errCode;
    private String status;
    private String ported;

    /**
     * Default constructor.
     */
    public Responses() {
    }

    /**
     * Initialization constructor.
     * @param  number  String value for number.
     * @param  country  String value for country.
     * @param  errDesc  String value for errDesc.
     * @param  operatorName  String value for operatorName.
     * @param  type  String value for type.
     * @param  mccmnc  String value for mccmnc.
     * @param  roaming  String value for roaming.
     * @param  errCode  String value for errCode.
     * @param  status  String value for status.
     * @param  ported  String value for ported.
     */
    public Responses(
            String number,
            String country,
            String errDesc,
            String operatorName,
            String type,
            String mccmnc,
            String roaming,
            String errCode,
            String status,
            String ported) {
        this.number = number;
        this.country = country;
        this.errDesc = errDesc;
        this.operatorName = operatorName;
        this.type = type;
        this.mccmnc = mccmnc;
        this.roaming = roaming;
        this.errCode = errCode;
        this.status = status;
        this.ported = ported;
    }

    /**
     * Getter for Number.
     * @return Returns the String
     */
    @JsonGetter("number")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNumber() {
        return number;
    }

    /**
     * Setter for Number.
     * @param number Value for String
     */
    @JsonSetter("number")
    public void setNumber(String number) {
        this.number = number;
    }

    /**
     * Getter for Country.
     * @return Returns the String
     */
    @JsonGetter("country")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCountry() {
        return country;
    }

    /**
     * Setter for Country.
     * @param country Value for String
     */
    @JsonSetter("country")
    public void setCountry(String country) {
        this.country = country;
    }

    /**
     * Getter for ErrDesc.
     * @return Returns the String
     */
    @JsonGetter("err_desc")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getErrDesc() {
        return errDesc;
    }

    /**
     * Setter for ErrDesc.
     * @param errDesc Value for String
     */
    @JsonSetter("err_desc")
    public void setErrDesc(String errDesc) {
        this.errDesc = errDesc;
    }

    /**
     * Getter for OperatorName.
     * @return Returns the String
     */
    @JsonGetter("operatorName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOperatorName() {
        return operatorName;
    }

    /**
     * Setter for OperatorName.
     * @param operatorName Value for String
     */
    @JsonSetter("operatorName")
    public void setOperatorName(String operatorName) {
        this.operatorName = operatorName;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Mccmnc.
     * @return Returns the String
     */
    @JsonGetter("mccmnc")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMccmnc() {
        return mccmnc;
    }

    /**
     * Setter for Mccmnc.
     * @param mccmnc Value for String
     */
    @JsonSetter("mccmnc")
    public void setMccmnc(String mccmnc) {
        this.mccmnc = mccmnc;
    }

    /**
     * Getter for Roaming.
     * @return Returns the String
     */
    @JsonGetter("roaming")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRoaming() {
        return roaming;
    }

    /**
     * Setter for Roaming.
     * @param roaming Value for String
     */
    @JsonSetter("roaming")
    public void setRoaming(String roaming) {
        this.roaming = roaming;
    }

    /**
     * Getter for ErrCode.
     * @return Returns the String
     */
    @JsonGetter("err_code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getErrCode() {
        return errCode;
    }

    /**
     * Setter for ErrCode.
     * @param errCode Value for String
     */
    @JsonSetter("err_code")
    public void setErrCode(String errCode) {
        this.errCode = errCode;
    }

    /**
     * Getter for Status.
     * @return Returns the String
     */
    @JsonGetter("status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for Ported.
     * @return Returns the String
     */
    @JsonGetter("ported")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPorted() {
        return ported;
    }

    /**
     * Setter for Ported.
     * @param ported Value for String
     */
    @JsonSetter("ported")
    public void setPorted(String ported) {
        this.ported = ported;
    }

    /**
     * Converts this Responses into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Responses [" + "number=" + number + ", country=" + country + ", errDesc=" + errDesc
                + ", operatorName=" + operatorName + ", type=" + type + ", mccmnc=" + mccmnc
                + ", roaming=" + roaming + ", errCode=" + errCode + ", status=" + status
                + ", ported=" + ported + "]";
    }

    /**
     * Builds a new {@link Responses.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Responses.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .number(getNumber())
                .country(getCountry())
                .errDesc(getErrDesc())
                .operatorName(getOperatorName())
                .type(getType())
                .mccmnc(getMccmnc())
                .roaming(getRoaming())
                .errCode(getErrCode())
                .status(getStatus())
                .ported(getPorted());
        return builder;
    }

    /**
     * Class to build instances of {@link Responses}.
     */
    public static class Builder {
        private String number;
        private String country;
        private String errDesc;
        private String operatorName;
        private String type;
        private String mccmnc;
        private String roaming;
        private String errCode;
        private String status;
        private String ported;



        /**
         * Setter for number.
         * @param  number  String value for number.
         * @return Builder
         */
        public Builder number(String number) {
            this.number = number;
            return this;
        }

        /**
         * Setter for country.
         * @param  country  String value for country.
         * @return Builder
         */
        public Builder country(String country) {
            this.country = country;
            return this;
        }

        /**
         * Setter for errDesc.
         * @param  errDesc  String value for errDesc.
         * @return Builder
         */
        public Builder errDesc(String errDesc) {
            this.errDesc = errDesc;
            return this;
        }

        /**
         * Setter for operatorName.
         * @param  operatorName  String value for operatorName.
         * @return Builder
         */
        public Builder operatorName(String operatorName) {
            this.operatorName = operatorName;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for mccmnc.
         * @param  mccmnc  String value for mccmnc.
         * @return Builder
         */
        public Builder mccmnc(String mccmnc) {
            this.mccmnc = mccmnc;
            return this;
        }

        /**
         * Setter for roaming.
         * @param  roaming  String value for roaming.
         * @return Builder
         */
        public Builder roaming(String roaming) {
            this.roaming = roaming;
            return this;
        }

        /**
         * Setter for errCode.
         * @param  errCode  String value for errCode.
         * @return Builder
         */
        public Builder errCode(String errCode) {
            this.errCode = errCode;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for ported.
         * @param  ported  String value for ported.
         * @return Builder
         */
        public Builder ported(String ported) {
            this.ported = ported;
            return this;
        }

        /**
         * Builds a new {@link Responses} object using the set fields.
         * @return {@link Responses}
         */
        public Responses build() {
            return new Responses(number, country, errDesc, operatorName, type, mccmnc, roaming,
                    errCode, status, ported);
        }
    }
}
